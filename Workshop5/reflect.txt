/*
*****************************************************************************
                        Workshop 5 - Part 2
Full Name  : Ali Rezk
Student ID#: 105593222
Email      : arezk1@myseneca.ca
Section    : ZBB
Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
*/

In this workshop I have gained a deeper understanding of several important concepts like functor and lambda expression.
the difference between functors and lambda expressions are: functors are like special functions inside classes that you can use them as if they
are normal functions They are great when you need to remember things between uses. but lambda expressions are quick and nameless functions
that are perfect for simple stuff its like a lite function You choose between them based on how tricky the job is. for example, 
in the SpellChecker the lambda does a quick job like words swapping but the Collection class uses a functor for more complicated tasks with observers.
I think when the task is simple and quick I should choose lambdas but when I need more complexity and memory then use functors.


In the SpellChecker constructor we can change it like when it can't find a file. instead of throwing errors like we can make it return
simple success or fail messages like true or false as we used to do before. then when we use the constructor, if it gives us 
false or fail we will know something went wrong and then we can deal with it. 
throw "Bad file name!" or if(!passed){cout<<"failed"<<endl;}


The Movie and Book classes have a lot of code that looks almost the same to make it more simple and avoid repeating the same code
we can create a new class that would have all the common things these two classes need and the logic for reading data. 
then the Movie and Book can inherit from this new class 




